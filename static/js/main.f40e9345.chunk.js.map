{"version":3,"sources":["components/control/Input.js","components/control/CurrencyList.js","components/control/CurrencyListTo.js","components/control/SwitchButton.js","containers/Control.js","components/graph/Line.js","containers/Graph.js","reducers/currency.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","Input","label","disabled","handleChange","classes","className","noValidate","autoComplete","TextField","id","type","name","margin","variant","onChange","CurrencyList","from","rates","select","value","SelectProps","MenuProps","MenuItem","map","option","key","to","button","input","SwitchButton","switchCurrency","Button","onClick","Control","dispatch","useDispatch","useState","setRates","setFrom","base","setBase","setTo","result","setResult","inputFrom","setInputFrom","entries","Object","useEffect","a","axios","get","res","data","getCurrency","convert","converter","e","target","event","payload","CurrencyListTo","Chart","history","labels","keys","values","o","datasets","borderColor","line","Graph","useSelector","state","currency","currency_from","currency_to","setHistory","symbol","setSymbol","base_","symbol_","getHistory","updateCurrency","action","rootReducer","combineReducers","middleware","thunk","store","createStore","compose","applyMiddleware","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f40e9345.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    dense: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst Input = ({ label, disabled, handleChange }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <TextField\r\n                id=\"outlined-email-input\"\r\n                label={label || ''}\r\n                className={classes.textField}\r\n                type=\"number\"\r\n                name=\"amount\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                onChange={handleChange}\r\n                disabled={disabled}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    dense: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst CurrencyList = ({ from, rates, handleChange }) => {\r\n    const classes = useStyles();\r\n    return (\r\n       <div>\r\n            <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            label=\"From\"\r\n            name='from'\r\n            className={classes.textField}\r\n            value={`base`}\r\n            onChange={handleChange}\r\n            SelectProps={{\r\n                MenuProps: {\r\n                    className: classes.menu\r\n                },                                                                                                                                                                                                                \r\n            }}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n        >\r\n            <MenuItem value='base'>{from}</MenuItem> \r\n            {rates.map(option => (\r\n                <MenuItem key={option[0]} value={option}>\r\n                    {option[0]}\r\n                </MenuItem>\r\n            ))}\r\n        </TextField>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default CurrencyList;\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    dense: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nconst CurrencyList = ({ rates, to, handleChange }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TextField\r\n            id=\"outlined-select-currency\"\r\n            select\r\n            label=\"To\"\r\n            className={classes.textField}\r\n            value={`base`}\r\n            onChange={handleChange}\r\n            SelectProps={{\r\n                MenuProps: {\r\n                    className: classes.menu,\r\n                },\r\n            }}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n        >   \r\n            <MenuItem value='base'>{to}</MenuItem> \r\n            {rates.map(option => (\r\n                <MenuItem key={option[0]} value={option}>\r\n                    {option[0]}\r\n                </MenuItem>\r\n            ))}\r\n\r\n        </TextField>\r\n    )\r\n}\r\n\r\nexport default CurrencyList;\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(({\r\n    button: {\r\n      margin: 20,\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }));\r\n\r\nconst SwitchButton = ({ switchCurrency }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button variant=\"contained\" onClick={switchCurrency} className={classes.button}>\r\n            Switch\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default SwitchButton;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { convert } from 'cashify';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Input from '../components/control/Input';\r\nimport CurrencyList from '../components/control/CurrencyList';\r\nimport CurrencyListTo from '../components/control/CurrencyListTo';\r\nimport SwitchButton from '../components/control/SwitchButton';\r\n\r\nimport '../styles/control.scss';\r\n\r\nconst Control = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [rates, setRates] = useState('');\r\n\r\n    const [from, setFrom] = useState('');\r\n    const [base, setBase] = useState('');\r\n    const [to, setTo] = useState('');\r\n\r\n    const [result, setResult] = useState('');\r\n    const [inputFrom, setInputFrom] = useState('');\r\n\r\n    const entries = Object.entries(rates);\r\n\r\n    useEffect(() => {\r\n        const getCurrency = async () => {\r\n            const res = await axios.get(`https://api.exchangeratesapi.io/latest?base=${base}`);\r\n            setRates(res.data.rates);\r\n        }\r\n\r\n        getCurrency()\r\n    }, [base]);\r\n\r\n    useEffect(() => {\r\n        const converter = async () => {\r\n            let result = convert(inputFrom, { from: from, to: to, base: base, rates });\r\n            setResult(result);\r\n        }\r\n\r\n        converter()\r\n    }, [inputFrom, from, to])\r\n\r\n    const setCurrencyFrom = event => {\r\n        setFrom(event.target.value[0]);\r\n        setBase(event.target.value[0]);\r\n        dispatch({ type: 'ADD_CURRENCY_FROM', payload: event.target.value[0] });\r\n    }\r\n\r\n    const setCurrencyTo = event => {\r\n        setTo(event.target.value[0]);\r\n        dispatch({ type: 'ADD_CURRENCY_TO', payload: event.target.value[0] });\r\n    }\r\n\r\n    const switchCurrency = () => {\r\n        setFrom(to);\r\n        setTo(from);\r\n        dispatch({ type: 'ADD_CURRENCY_FROM', payload: to });\r\n        dispatch({ type: 'ADD_CURRENCY_TO', payload: from });\r\n    }\r\n\r\n    return (\r\n        <div className='control__container'>\r\n            <div className='side'>\r\n                <Input label='Input' handleChange={e => setInputFrom(e.target.value)} />\r\n                <CurrencyList rates={entries} from={from} base={base} handleChange={setCurrencyFrom} />\r\n            </div>\r\n            <SwitchButton switchCurrency={switchCurrency} />\r\n            <div className='side'>\r\n                <Input label={result} disabled={true} />\r\n                <CurrencyListTo rates={entries} to={to} handleChange={setCurrencyTo} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Control;\r\n","import React, { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst Chart = ({ to, history }) => {\r\n\r\n    const labels = Object.keys(history);\r\n    const values = Object.values(history).map(o => Object.values(o));\r\n    \r\n    const [line, setLine] = useState({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: '',\r\n                borderColor: 'blue',\r\n                data: [],\r\n            }\r\n        ]\r\n    })\r\n\r\n    const updateData = () => {\r\n        line.datasets[0].label = to\r\n        line.labels = labels || []\r\n        line.datasets[0].data = values || []\r\n    }\r\n\r\n    updateData();\r\n\r\n    return (\r\n        <div className='chart'>\r\n            <Line data={line}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Chart from '../components/graph/Line';\r\n\r\nimport '../styles/chart.scss';\r\n\r\nconst Graph = () => {\r\n\r\n    const from = useSelector(state => state.currency.currency_from);\r\n    const to = useSelector(state => state.currency.currency_to);\r\n\r\n    const [history, setHistory] = useState([]);\r\n    const [base, setBase] = useState('');\r\n    const [symbol, setSymbol] = useState('');\r\n\r\n    useEffect(() => {\r\n        const getHistory = async () => {\r\n            const base_ = base || null\r\n            const symbol_ = symbol || null\r\n            const res = await axios.get(`https://api.exchangeratesapi.io/history?start_at=2019-08-01&end_at=2019-09-01&base=${base_}&symbols=${symbol_}`);\r\n            setHistory(res.data.rates)\r\n        }\r\n\r\n        getHistory();\r\n    }, [base, symbol])\r\n\r\n    useEffect(() => {\r\n        const updateCurrency = async () => {\r\n            setBase(from);\r\n            setSymbol(to);\r\n        }\r\n\r\n        updateCurrency();\r\n    }, [from, to])\r\n\r\n    return (\r\n        <div className='chart__wrapper'>\r\n            <Chart from={from} to={to} history={history} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph;\r\n","const currency = (state = {currency_from: '', currency_to: ''}, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_CURRENCY_FROM':\r\n            return {\r\n                ...state,\r\n                currency_from: action.payload\r\n            } \r\n        case 'ADD_CURRENCY_TO':\r\n            return {\r\n                ...state,\r\n                currency_to: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default currency;","import { combineReducers } from 'redux';\r\nimport currency from './currency';\r\n\r\nconst rootReducer = combineReducers({ currency });\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers/index';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(...middleware)\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport Control from './containers/Control';\nimport Graph from './containers/Graph'\n\nimport store from './store';\n\nconst App = () => (\n    <Provider store={store}>\n        <Control />\n        <Graph />\n    </Provider>    \n)\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}